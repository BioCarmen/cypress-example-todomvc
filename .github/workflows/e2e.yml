name: End-to-end tests
on:
  workflow_dispatch:
  issue_comment:
    types: [created, edited]
  pull_request:
    types: [labeled]
jobs:
  cypress-run-e2e:
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event.issue.pull_request && contains( github.event.comment.body, 'run cypress' )) }}
    runs-on: windows-latest
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 3 copies of the current job in parallel
        containers: [1, 2, 3]
    steps:
      - name: Extracting PR route
        if: ${{ github.event.issue.pull_request }}
        id: extracting_route
        run: |
          echo "::set-output name=route::$(echo ${{ github.event.issue.pull_request.url }}  | sed s-https://api.github.com--)"
          echo "sha ${{ github.event.issue.pull_request }}"
      - name: Getting PR data
        if: ${{ github.event.issue.pull_request }}
        id: pr_data
        uses: octokit/request-action@v2.x
        with:
          route: GET ${{ steps.extracting_route.outputs.route }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout PRed branch
        uses: actions/checkout@v2
        if: ${{ github.event.issue.pull_request }}
        with:
          ref: ${{ fromJson(steps.pr_data.outputs.data).head.ref }}
      - name: Run the action # You would run your tests before this using the output to set state/desc
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: "Test run"
          description: "Passed"
          state: "success"
          sha: ${{github.event.pull_request.head.sha || github.sha}}
  #     - name: Cypress run
  #       uses: cypress-io/github-action@v2
  #       with:
  #         record: true
  #         parallel: true
  #         group: "Actions example"
  #         start: "npm run test:ci:record"
  #         wait-on: "http://localhost:8888"
  #       env:
  #         # pass the Dashboard record key as an environment variable
  #         CYPRESS_RECORD_KEY: "be2efe05-65a6-477e-ba04-9ed19fd53a83"
  #         # Recommended: pass the GitHub token lets this action correctly
  #         # determine the unique run id necessary to re-run the checks
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # cypress-pass-e2e:
  #   if: ${{ always() }}
  #   runs-on: windows-latest
  #   needs: cypress-run-e2e
  #   steps:
  #     - name: echo
  #       run: echo "${{needs.cypress-run-e2e.result}} ${{needs.cypress-run-e2e.result != 'success' || needs.cypress-run-e2e.result != 'skipped' }}"
  # - name: Check all cypress test matrix status
  #   if: ${{ needs.cypress-run-e2e.result != 'success' && needs.cypress-run-e2e.result != 'skipped' }}
  # run: |
  #   curl --request POST \
  #   --url https://api.github.com/repos/OWNER/REPO/statuses/${{ sha }} \
  #   --header 'authorization: token ${{ secrets.PAT }}' \
  #   --header 'content-type: application/json' \
  #   --data '{"state": "failure","target_url": "https://example.com/build/status","description": "The tests failed!","context": "ci/tests"}'

  # - name: Run E2E tests
  #   uses: cypress-io/github-action@v2
  #   with:
  #     start: "npm run test:ci:record"
  #     wait-on: "http://localhost:8888"
  #     # let's see if the Test Runner handles url in the config
  #     # https://github.com/cypress-io/cypress/issues/5466
  #     config: baseUrl=http://localhost:8888
