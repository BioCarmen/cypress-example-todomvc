name: Main
on:
  push:
    branches:
      - "develop"
      - "hotfix/*"

jobs:
  test:
    name: run test
    runs-on: ubuntu-20.04
    steps:
      - run: echo "yeah"
  check:
    name: Check if job should run
    runs-on: ubuntu-20.04
    needs: [test]
    steps:
      - uses: actions/checkout@v2

      # - run: git fetch --prune --unshallow
      # - name: Dump GitHub context
      #   env:
      #     GITHUB_CONTEXT: ${{ toJSON(github) }}
      #   run: echo "$GITHUB_CONTEXT"

      - name: Commit report
        id: get-tag
        run: |
          git fetch --prune --tags
          t=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "::set-output name=latest_tag::$t"
      - name: echo
        run: |
          echo ${{ steps.get-tag.outputs.latest_tag }}
      - name: Create tag
        uses: actions/github-script@v6
        id: set-release
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const release = github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `refs/tags/${{steps.get-tag.outputs.latest_tag}}`,
              generate_release_notes: true
            })
            console.log(release)
          # script: |
          # const script = require('./release.js')

          # await script({github, context, core, tag: `${{steps.latest-tag.outputs.latest_tag}}` })

          result-encoding: string
      - name: get
        if: success()
        run: echo ${{steps.set-release.outcome}}
  # call-a:
  #   needs: [check]
  #   if: success()
  #   uses: ./.github/workflows/workflow-a.yml
  #   secrets:
  #     SENTRY_AUTH_TOKEN_CLIENT: ${{secrets.SENTRY_AUTH_TOKEN_CLIENT}}
  #     AWS_ACCESS_KEY_ID_FOR_AWS_DEV_ACCOUNT: ${{secrets.AWS_ACCESS_KEY_ID_FOR_AWS_DEV_ACCOUNT}}
  slack-fail:
    if: failure()
    needs: [check]
    name: run test
    runs-on: ubuntu-20.04
    steps:
      - name: send failed slack
        if: needs.check.result != 'success'
        run: |
          echo "Fail"
