name: Rollback Service (AWS)
on:
  workflow_dispatch:
    inputs:
      rollback_to_tag:
        description: "Release tag to rollback to"
        type: string

jobs:
  get-target-sha:
    runs-on: ubuntu-latest
    outputs:
      target_sha: ${{ steps.set_target_sha.outputs.targetSha }}
    steps:
      - name: Rollback to the specific tag
        id: specific-tag
        if: ${{ inputs.rollback_to_tag }}
        uses: actions/github-script@v6
        with:
          script: |
            const targetRelease = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'tags/${{ inputs.rollback_to_tag }}'
            })
            return targetRelease.data.object.sha

      - name: Rollback to second latest tag
        if: ${{ !inputs.rollback_to_tag }}
        id: second-latest-tag
        uses: actions/github-script@v6
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,          
            })
            const secondLatestTag = releases.data[1].tag_name
            console.log(secondLatestTag)
            const targetRelease = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `tags/${secondLatestTag}`
            })
            return targetRelease.data.object.sha
      - name: Set target SHA
        id: set_target_sha
        run: |
          if [[ "${{ steps.specific-tag.outputs.result }}" != "" ]]; then
              echo "::set-output name=targetSha::${{ steps.specific-tag.outputs.result }}"
          fi
          if [[ "${{ steps.second-latest-tag.outputs.result }}" != "" ]]; then
              echo "::set-output name=targetSha::${{ steps.second-latest-tag.outputs.result }}"
          fi
  bio-web-app:
    runs-on: ubuntu-latest
    needs: get-target-sha
    steps:
      - run: echo ${{needs.get-target-sha.outputs.target_sha }}
