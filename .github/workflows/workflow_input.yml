name: Rollback Service (AWS)
on:
  workflow_dispatch:
    inputs:
      rollback_to_tag:
        description: "Release tag to rollback to"
        type: string

jobs:
  get-target-sha:
    runs-on: ubuntu-latest
    steps:
      - name: Rollback to the specific tag
        id: get-tag
        uses: actions/github-script@v6
        with:
          script: |
            const rollbackToTag = ${{  inputs.rollback_to_tag }}
            if (rollbackToTag) {
              targetRelease = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'tags/${{ inputs.rollback_to_tag }}'
              })
              console.log(targetRelease)
              return targetRelease
            } else {
              const releases = await github.rest.repos.listReleases({
                owner: context.repo.owner,
                repo: context.repo.repo,          
              })
              const secondLatestTag = releases.data[1].tag_name
              console.log(secondLatestTag)
              targetRelease = await github.rest.git.getRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `tags/${secondLatestTag}`
              })
              console.log(targetRelease)
              return targetRelease
            }

      - name: Set target SHA
        run: |
          echo "${{steps.get-tag.outputs.result}}"
      # - name: Rollback to second latest tag
      #   if: ${{ !inputs.rollback_to_tag }}
      #   id: second-latest-tag
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       const releases = await github.rest.repos.listReleases({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #       })
      #       const secondLatestTag = releases.data[1].tag_name
      #       console.log(secondLatestTag)
      #       const targetRelease = await github.rest.git.getRef({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         ref: `tags/${secondLatestTag}`
      #       })
      #       console.log(targetRelease)
